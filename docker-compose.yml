version: '3.3'

services:
  rabbit:
    image: rabbitmq:3.9-management
    container_name: "rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"

  postgres:
    image: postgres:13.6
    container_name: "postgres"
    environment:
      - POSTGRES_DB=schedule
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=qwerty
    ports:
      - "5432:5432"
  user:
    container_name: "user"
    build:
      context: ./user
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOSTS=postgres:5432
      - POSTGRES_DB=schedule
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=qwerty

  registration:
    container_name: "registration"
    build:
      context: ./registration
      dockerfile: ./Dockerfile
    depends_on:
      - email
      - postgres
      - user
      - rabbit
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_HOSTS=postgres:5432
      - POSTGRES_DB=schedule
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=qwerty
      - RABBIT_HOST=rabbit
      - RABBIT_PORT=5672
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - SERVER_PORT=8081
      - RABBIT_QUEUE=mail_processed
      - USER_SERVICE_HOSTS=user:8080
      - NGINX_PORT=80
      - SCHEDULE_SERVICE_HOSTS=schedule:8083

  email:
    container_name: "email"
    build:
      context: ./email
      dockerfile: ./Dockerfile
    depends_on:
      - rabbit
    environment:
      - RABBIT_QUEUE=mail_processed
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672
      - FROM_EMAIL=teamscheduleservice@gmail.com
      - FROM_EMAIL_PASSWORD=teamscheduleservice1%

  jwt:
    container_name: "jwt"
    build:
      context: ./jwt
      dockerfile: ./Dev.dockerfile
    depends_on:
      - user
    ports:
      - "8082:8082"
    volumes:
      - ./jwt:/jwt
    environment:
      - JWT_SECRET_KEY=kXpBmV^_|BFq#c.-""B:cd#k6-/EuVp]
      - USER_SERVICE_HOSTS=user:8080

  nginx:
    container_name: "nginx"
    build:
      context: ./nginx
      dockerfile: ./Dev.dockerfile
    depends_on:
      - jwt
      - jwt-filter
      - registration
      - user
      - avatar
    ports:
      - "80:80"
    volumes:
      - ./nginx/static/:/nginx/static

  client:
    container_name: "client"
    build:
      context: ./client
      dockerfile: ./Dev.dockerfile
    ports:
      - "3000:3000"

  schedule:
    container_name: "schedule"
    build:
      context: ./schedule
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    ports:
      - "8083:8083"
    environment:
      - POSTGRES_HOSTS=postgres:5432
      - POSTGRES_DB=schedule
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=qwerty
      - SERVER_PORT=8083

  jwt-filter:
    container_name: "jwt-filter"
    build:
      context: ./jwt-filter
      dockerfile: ./Dev.dockerfile
    ports:
      - "8086:8086"
    environment:
      - JWT_SECRET_KEY=kXpBmV^_|BFq#c.-""B:cd#k6-/EuVp]
      - JWT_FILTER_PORT=8086

  dbAvatar:
    container_name: "dbAvatar"
    image: postgres:14.2-alpine
    restart: always
    env_file:
      - ./avatar/.env-dev
    volumes:
      - ./avatar/data/pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5433"

  avatar:
    container_name: "avatar"
    build:
      context: ./avatar
      dockerfile: ./Dev.dockerfile
    env_file:
      - ./avatar/.env-dev
    volumes:
      - ./avatar/data/avatars:/avatar/avatars
    depends_on:
      - dbAvatar
    ports:
      - "8087:8087"
